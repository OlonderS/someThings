S1<-function(x){  # estymator obciążony wariancji
s<-0
for(i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x){  # estymator nieobiciążony wariancji
s<-0
for( i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(sigma/(length(x)-1))
}
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
S2<-function(x){  # estymator nieobiciążony wariancji
s<-0
for( i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(2,1))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
par(mfrow =c(1, 2))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
par(mfrow =c(1, 2))
r=2
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
par(mfrow =c(1, 2))
r=2
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S1(y) )
points(i, 1/r^2, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S2(y) )
points(i, 1/r^2, col = "green", lwd="1")
x<-1:1000
S1<-function(x) # estymator obciążony wariancji
{
s<-0
for(i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(1, 2))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
par(mfrow =c(1, 2))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
x<-1:1000
S1<-function(x) # estymator obciążony wariancji
{
s<-0
for(i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(1, 2))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
x<-1:1000
S1<-function(x) # estymator obciążony wariancji
{
s<-0
for(i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(1, 2))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
x<-1:1000
S1<-function(x) # estymator obciążony wariancji
{
s<-0
for(i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(1, 2))
l<-5
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
par(mfrow =c(1, 2))
r=2
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S1(y) )
points(i, 1/r^2, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S2(y) )
points(i, 1/r^2, col = "green", lwd="1")
}
)
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x)-1)
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:999)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
x<-1:999
S1<-function(x) # estymator obciążony wariancji
{
s<-0
for(i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(1, 2))
l<-5
n <- 999
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:999)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:999)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
x<-1:1000
S1<-function(x) # estymator obciążony wariancji
{
s<-0
for(i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/length(x))
}
S2<-function(x) # estymator nieobiciążony wariancj
{  i
s<-0
for( i in 1:length(x))
{
s = s+(x[i]-mean(x))^2
}
return(s/(length(x)-1))
}
par(mfrow =c(1, 2))
l<-5
n <- 999
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:999)
{
y <- rpois(1:i, lambda = l)
points(i, S1(y) )
points(i, l, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:999)
{
y <- rpois(1:i, lambda = l)
points(i, S2(y) )
points(i, l, col = "green", lwd="1")
}
par(mfrow =c(1, 2))
r=2
n <- 1000
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S1(y) )
points(i, 1/r^2, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S2(y) )
points(i, 1/r^2, col = "green", lwd="1")
}
n <- 1000
plot(c(0,10)~c(1,n), ylim=c(0,2), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S1(y) )
points(i, 1/r^2, col = "red", lwd="1")
}
par(mfrow =c(1, 2))
r=2
n <- 1000
plot(c(0,10)~c(1,n), ylim=c(0,1), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S1(y) )
points(i, 1/r^2, col = "red", lwd="1")
}
plot(c(0,10)~c(1,n), ylim=c(0,1), main="Obciążony estymator wariancji dla EXP(2)", xlab ="Wielkość próby", ylab="Wartości wariancji")
for(i in 1:1000)
{
y <- rexp(n = 1:i, rate = r)
points(i, S2(y) )
points(i, 1/r^2, col = "green", lwd="1")
}
p<-0.5
q<-1-p
n1<-10
n2<-100
n3<-1000
n4<-10000
par(mfrow=c(2,2))
plot(x=0:10, y = dbinom(0:10,  n1, p),  ylab="Prawdopodobieństwo", xlab="Liczba sukcesów" )
plot(x=20:80, y = dbinom(20:80,  n2, p),  ylab="Prawdopodobieństwo", xlab="Liczba sukcesów")
plot(x=400:600, y = dbinom(400:600,  n3, p),  ylab="Prawdopodobieństwo", xlab="Liczba sukcesów")
plot(x=4500:5500, y = dbinom(4500:5500,  n4, p),  ylab="Prawdopodobieństwo", xlab="Liczba sukcesów")
zz10=(0:10 - 10*0.5)/sqrt(10*0.5*0.5)
l<-2
n=10
par(mfrow=c(1,3))
plot(x=1:n, y=dpois(1:n, l), main = "Rozkład Poissona dla λ=2", xlab="Wartość", ylab="Prawdopodobieństwo")  # rpois generuje n liczb z rozkladu Poissona o  danym λ
plot(x=1:n, y=dpois(1:n, l+2), main = "Rozkład Poissona dla λ=4", xlab="Wartość", ylab="Prawdopodobieństwo")
plot(x=1:n, y=dpois(1:n, l-1), main = "Rozkład Poissona dla λ=1", xlab="Wartość", ylab="Prawdopodobieństwo")
paste("P(X = 0) = ", round(dpois(0, l), 3)) # dpois zwraca prawdopodobienstwo dla danego k i λ
paste("P(3 <= X < 5) = ", round(dpois(3, l)+dpois(4, l), 3))
paste("P(X =/= 1) = ", round(1-dpois(1, l), 3))
paste("P(X < 9) = ", round(ppois(8, l), 4)) # ppois zwraca wartosc dystrybuany dla danego k i λ
paste("P(X >= 4) = ", round(1-ppois(3, l), 3))
Y<-rpois(1000, l)
paste("EY = ", EY<-sum(Y)/1000)
paste("D^2Y = ", round(D2Y<-sum((Y-EY)^2/1000), 3))
paste("Prawdopodobieństwo, że NY Knicks wygrają przynajmniej jeden mecz wynosi: ", round(1-(0.65)^7), 3)
czy_wygrali<-c()
x<-10000
for (i in 1:x) # wykonanie doświadczenia x razy
{
zwyciezcy<-c()
for (j in 1:7) # 7 razy losowany zwyciężca meczu
{
zwyciezcy[j]=sample(c("Chicago Bulls", "NY Knicks"), size = 1, replace = FALSE, prob = c(0.65, 0.35))
}
czy_wygrali[i]="NY Knicks" %in% zwyciezcy  # jeśli Knicks wygrało to dodajemy TRUE
}
table(czy_wygrali)
paste("[Metoda Monte Carlo] Prawdopodobieństwo, że NY Knicks wygrają przynajmniej jeden mecz wynosi: ", sum(czy_wygrali==TRUE)/x) # zliczamy wartości TRUE i liczymy ich stosunem do x czyli liczby doświadczeń
paste("Prawdopodobieństwo, że NY Knicks wygrają przynajmniej jeden mecz wynosi: ", round(1-(0.65)^7, 3))
czy_wygrali<-c()
x<-10000
for (i in 1:x) # wykonanie doświadczenia x razy
{
zwyciezcy<-c()
for (j in 1:7) # 7 razy losowany zwyciężca meczu
{
zwyciezcy[j]=sample(c("Chicago Bulls", "NY Knicks"), size = 1, replace = FALSE, prob = c(0.65, 0.35))
}
czy_wygrali[i]="NY Knicks" %in% zwyciezcy  # jeśli Knicks wygrało to dodajemy TRUE
}
table(czy_wygrali)
paste("[Metoda Monte Carlo] Prawdopodobieństwo, że NY Knicks wygrają przynajmniej jeden mecz wynosi: ", sum(czy_wygrali==TRUE)/x) # zliczamy wartości TRUE i liczymy ich stosunem do x czyli liczby doświadczeń
library(distr)
library(distr)
dwiekostki <- DiscreteDistribution(supp = c(2:12), prob = c(1/36, 2/36, 3/36, 4/36, 5/36, 6/36, 5/36, 4/36, 3/36, 2/36, 1/36), ) # definicja nowego rozkladu
ddwiekostki <- d(dwiekostki)  # gęstość
pdwiekostki <- p(dwiekostki)  # dystrybuanta
qdwiekostki <- q(dwiekostki)  # funkcja kwantylowa
rdwiekostki <- r(dwiekostki)  # generowanie liczb losowych
plot(0:15, ddwiekostki(x = 0:15), main = "Rozkład zmiennej dwiekostki", xlab="Liczba oczek", ylab="Prawdopodobieństwo")
paste("P(X = 0) = ", round(ddwiekostki(x = 0), 3)) # zwraca prawdopodobienstwo ze suma oczek wyniesie x
paste("P(3 <= X < 5) = ", round(ddwiekostki(3)+ddwiekostki(4), 3))
paste("P(X =/= 8) = ", round(1-ddwiekostki(8), 3))
paste("P(X < 9) = ", round(pdwiekostki(8), 3)) # zwraca wartosc dystrybuanty dla danego x
paste("P(X >= 4) = ", round(1-pdwiekostki(3), 3))
Y<-rdwiekostki(1000)
paste("EY = ", EY<-sum(Y)/1000)
paste("D^2Y = ", round(D2Y<-sum((Y-EY)^2/1000), 3))
dane_co2<-read.csv(file = "D:/R/co2.csv", sep=",")  # wczytuję dane
dane_co2<-dane_co2 %>%
select(ď.żcountry, X1987, X1992, X1997, X2002, X2007)%>%  # wybieram konkretne lata i zmieniam nazwy kolumn
rename(
country = ď.żcountry,
'1987' = X1987,
'1992' = X1992,
'1997' = X1997,
'2002' = X2002,
'2007' = X2007)
dane_co2<-dane_co2 %>%
gather("year", "co2_emission", -1, na.rm = TRUE)    # przekształcam dane do takiej postaci jak te z gapmindera
dane_co2$year <- as.integer(daneco2$year)
